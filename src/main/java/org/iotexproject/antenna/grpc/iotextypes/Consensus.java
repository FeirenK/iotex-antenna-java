// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: consensus.proto

package org.iotexproject.antenna.grpc.iotextypes;

public final class Consensus {
  private Consensus() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BlockProposalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:iotextypes.BlockProposal)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.iotextypes.Block block = 1;</code>
     */
    boolean hasBlock();
    /**
     * <code>.iotextypes.Block block = 1;</code>
     */
    org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block getBlock();
    /**
     * <code>.iotextypes.Block block = 1;</code>
     */
    org.iotexproject.antenna.grpc.iotextypes.Blockchain.BlockOrBuilder getBlockOrBuilder();

    /**
     * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
     */
    java.util.List<org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement> 
        getEndorsementsList();
    /**
     * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
     */
    org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement getEndorsements(int index);
    /**
     * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
     */
    int getEndorsementsCount();
    /**
     * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
     */
    java.util.List<? extends org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.EndorsementOrBuilder> 
        getEndorsementsOrBuilderList();
    /**
     * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
     */
    org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.EndorsementOrBuilder getEndorsementsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code iotextypes.BlockProposal}
   */
  public  static final class BlockProposal extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:iotextypes.BlockProposal)
      BlockProposalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockProposal.newBuilder() to construct.
    private BlockProposal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockProposal() {
      endorsements_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlockProposal(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block.Builder subBuilder = null;
              if (block_ != null) {
                subBuilder = block_.toBuilder();
              }
              block_ = input.readMessage(org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(block_);
                block_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                endorsements_ = new java.util.ArrayList<org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement>();
                mutable_bitField0_ |= 0x00000002;
              }
              endorsements_.add(
                  input.readMessage(org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          endorsements_ = java.util.Collections.unmodifiableList(endorsements_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.iotexproject.antenna.grpc.iotextypes.Consensus.internal_static_iotextypes_BlockProposal_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.iotexproject.antenna.grpc.iotextypes.Consensus.internal_static_iotextypes_BlockProposal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.class, org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.Builder.class);
    }

    private int bitField0_;
    public static final int BLOCK_FIELD_NUMBER = 1;
    private org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block block_;
    /**
     * <code>.iotextypes.Block block = 1;</code>
     */
    public boolean hasBlock() {
      return block_ != null;
    }
    /**
     * <code>.iotextypes.Block block = 1;</code>
     */
    public org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block getBlock() {
      return block_ == null ? org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block.getDefaultInstance() : block_;
    }
    /**
     * <code>.iotextypes.Block block = 1;</code>
     */
    public org.iotexproject.antenna.grpc.iotextypes.Blockchain.BlockOrBuilder getBlockOrBuilder() {
      return getBlock();
    }

    public static final int ENDORSEMENTS_FIELD_NUMBER = 2;
    private java.util.List<org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement> endorsements_;
    /**
     * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
     */
    public java.util.List<org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement> getEndorsementsList() {
      return endorsements_;
    }
    /**
     * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
     */
    public java.util.List<? extends org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.EndorsementOrBuilder> 
        getEndorsementsOrBuilderList() {
      return endorsements_;
    }
    /**
     * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
     */
    public int getEndorsementsCount() {
      return endorsements_.size();
    }
    /**
     * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
     */
    public org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement getEndorsements(int index) {
      return endorsements_.get(index);
    }
    /**
     * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
     */
    public org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.EndorsementOrBuilder getEndorsementsOrBuilder(
        int index) {
      return endorsements_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (block_ != null) {
        output.writeMessage(1, getBlock());
      }
      for (int i = 0; i < endorsements_.size(); i++) {
        output.writeMessage(2, endorsements_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (block_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBlock());
      }
      for (int i = 0; i < endorsements_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, endorsements_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal)) {
        return super.equals(obj);
      }
      org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal other = (org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal) obj;

      if (hasBlock() != other.hasBlock()) return false;
      if (hasBlock()) {
        if (!getBlock()
            .equals(other.getBlock())) return false;
      }
      if (!getEndorsementsList()
          .equals(other.getEndorsementsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBlock()) {
        hash = (37 * hash) + BLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getBlock().hashCode();
      }
      if (getEndorsementsCount() > 0) {
        hash = (37 * hash) + ENDORSEMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getEndorsementsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code iotextypes.BlockProposal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:iotextypes.BlockProposal)
        org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.iotexproject.antenna.grpc.iotextypes.Consensus.internal_static_iotextypes_BlockProposal_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.iotexproject.antenna.grpc.iotextypes.Consensus.internal_static_iotextypes_BlockProposal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.class, org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.Builder.class);
      }

      // Construct using org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEndorsementsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (blockBuilder_ == null) {
          block_ = null;
        } else {
          block_ = null;
          blockBuilder_ = null;
        }
        if (endorsementsBuilder_ == null) {
          endorsements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          endorsementsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.iotexproject.antenna.grpc.iotextypes.Consensus.internal_static_iotextypes_BlockProposal_descriptor;
      }

      @java.lang.Override
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal getDefaultInstanceForType() {
        return org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.getDefaultInstance();
      }

      @java.lang.Override
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal build() {
        org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal buildPartial() {
        org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal result = new org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (blockBuilder_ == null) {
          result.block_ = block_;
        } else {
          result.block_ = blockBuilder_.build();
        }
        if (endorsementsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            endorsements_ = java.util.Collections.unmodifiableList(endorsements_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.endorsements_ = endorsements_;
        } else {
          result.endorsements_ = endorsementsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal) {
          return mergeFrom((org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal other) {
        if (other == org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.getDefaultInstance()) return this;
        if (other.hasBlock()) {
          mergeBlock(other.getBlock());
        }
        if (endorsementsBuilder_ == null) {
          if (!other.endorsements_.isEmpty()) {
            if (endorsements_.isEmpty()) {
              endorsements_ = other.endorsements_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEndorsementsIsMutable();
              endorsements_.addAll(other.endorsements_);
            }
            onChanged();
          }
        } else {
          if (!other.endorsements_.isEmpty()) {
            if (endorsementsBuilder_.isEmpty()) {
              endorsementsBuilder_.dispose();
              endorsementsBuilder_ = null;
              endorsements_ = other.endorsements_;
              bitField0_ = (bitField0_ & ~0x00000002);
              endorsementsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEndorsementsFieldBuilder() : null;
            } else {
              endorsementsBuilder_.addAllMessages(other.endorsements_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block block_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block, org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block.Builder, org.iotexproject.antenna.grpc.iotextypes.Blockchain.BlockOrBuilder> blockBuilder_;
      /**
       * <code>.iotextypes.Block block = 1;</code>
       */
      public boolean hasBlock() {
        return blockBuilder_ != null || block_ != null;
      }
      /**
       * <code>.iotextypes.Block block = 1;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block getBlock() {
        if (blockBuilder_ == null) {
          return block_ == null ? org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block.getDefaultInstance() : block_;
        } else {
          return blockBuilder_.getMessage();
        }
      }
      /**
       * <code>.iotextypes.Block block = 1;</code>
       */
      public Builder setBlock(org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block value) {
        if (blockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          block_ = value;
          onChanged();
        } else {
          blockBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.iotextypes.Block block = 1;</code>
       */
      public Builder setBlock(
          org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block.Builder builderForValue) {
        if (blockBuilder_ == null) {
          block_ = builderForValue.build();
          onChanged();
        } else {
          blockBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.iotextypes.Block block = 1;</code>
       */
      public Builder mergeBlock(org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block value) {
        if (blockBuilder_ == null) {
          if (block_ != null) {
            block_ =
              org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block.newBuilder(block_).mergeFrom(value).buildPartial();
          } else {
            block_ = value;
          }
          onChanged();
        } else {
          blockBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.iotextypes.Block block = 1;</code>
       */
      public Builder clearBlock() {
        if (blockBuilder_ == null) {
          block_ = null;
          onChanged();
        } else {
          block_ = null;
          blockBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.iotextypes.Block block = 1;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block.Builder getBlockBuilder() {
        
        onChanged();
        return getBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>.iotextypes.Block block = 1;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.Blockchain.BlockOrBuilder getBlockOrBuilder() {
        if (blockBuilder_ != null) {
          return blockBuilder_.getMessageOrBuilder();
        } else {
          return block_ == null ?
              org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block.getDefaultInstance() : block_;
        }
      }
      /**
       * <code>.iotextypes.Block block = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block, org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block.Builder, org.iotexproject.antenna.grpc.iotextypes.Blockchain.BlockOrBuilder> 
          getBlockFieldBuilder() {
        if (blockBuilder_ == null) {
          blockBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block, org.iotexproject.antenna.grpc.iotextypes.Blockchain.Block.Builder, org.iotexproject.antenna.grpc.iotextypes.Blockchain.BlockOrBuilder>(
                  getBlock(),
                  getParentForChildren(),
                  isClean());
          block_ = null;
        }
        return blockBuilder_;
      }

      private java.util.List<org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement> endorsements_ =
        java.util.Collections.emptyList();
      private void ensureEndorsementsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          endorsements_ = new java.util.ArrayList<org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement>(endorsements_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.EndorsementOrBuilder> endorsementsBuilder_;

      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public java.util.List<org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement> getEndorsementsList() {
        if (endorsementsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(endorsements_);
        } else {
          return endorsementsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public int getEndorsementsCount() {
        if (endorsementsBuilder_ == null) {
          return endorsements_.size();
        } else {
          return endorsementsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement getEndorsements(int index) {
        if (endorsementsBuilder_ == null) {
          return endorsements_.get(index);
        } else {
          return endorsementsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public Builder setEndorsements(
          int index, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement value) {
        if (endorsementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEndorsementsIsMutable();
          endorsements_.set(index, value);
          onChanged();
        } else {
          endorsementsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public Builder setEndorsements(
          int index, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder builderForValue) {
        if (endorsementsBuilder_ == null) {
          ensureEndorsementsIsMutable();
          endorsements_.set(index, builderForValue.build());
          onChanged();
        } else {
          endorsementsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public Builder addEndorsements(org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement value) {
        if (endorsementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEndorsementsIsMutable();
          endorsements_.add(value);
          onChanged();
        } else {
          endorsementsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public Builder addEndorsements(
          int index, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement value) {
        if (endorsementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEndorsementsIsMutable();
          endorsements_.add(index, value);
          onChanged();
        } else {
          endorsementsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public Builder addEndorsements(
          org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder builderForValue) {
        if (endorsementsBuilder_ == null) {
          ensureEndorsementsIsMutable();
          endorsements_.add(builderForValue.build());
          onChanged();
        } else {
          endorsementsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public Builder addEndorsements(
          int index, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder builderForValue) {
        if (endorsementsBuilder_ == null) {
          ensureEndorsementsIsMutable();
          endorsements_.add(index, builderForValue.build());
          onChanged();
        } else {
          endorsementsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public Builder addAllEndorsements(
          java.lang.Iterable<? extends org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement> values) {
        if (endorsementsBuilder_ == null) {
          ensureEndorsementsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, endorsements_);
          onChanged();
        } else {
          endorsementsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public Builder clearEndorsements() {
        if (endorsementsBuilder_ == null) {
          endorsements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          endorsementsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public Builder removeEndorsements(int index) {
        if (endorsementsBuilder_ == null) {
          ensureEndorsementsIsMutable();
          endorsements_.remove(index);
          onChanged();
        } else {
          endorsementsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder getEndorsementsBuilder(
          int index) {
        return getEndorsementsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.EndorsementOrBuilder getEndorsementsOrBuilder(
          int index) {
        if (endorsementsBuilder_ == null) {
          return endorsements_.get(index);  } else {
          return endorsementsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public java.util.List<? extends org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.EndorsementOrBuilder> 
           getEndorsementsOrBuilderList() {
        if (endorsementsBuilder_ != null) {
          return endorsementsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(endorsements_);
        }
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder addEndorsementsBuilder() {
        return getEndorsementsFieldBuilder().addBuilder(
            org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.getDefaultInstance());
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder addEndorsementsBuilder(
          int index) {
        return getEndorsementsFieldBuilder().addBuilder(
            index, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.getDefaultInstance());
      }
      /**
       * <code>repeated .iotextypes.Endorsement endorsements = 2;</code>
       */
      public java.util.List<org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder> 
           getEndorsementsBuilderList() {
        return getEndorsementsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.EndorsementOrBuilder> 
          getEndorsementsFieldBuilder() {
        if (endorsementsBuilder_ == null) {
          endorsementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.EndorsementOrBuilder>(
                  endorsements_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          endorsements_ = null;
        }
        return endorsementsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:iotextypes.BlockProposal)
    }

    // @@protoc_insertion_point(class_scope:iotextypes.BlockProposal)
    private static final org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal();
    }

    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockProposal>
        PARSER = new com.google.protobuf.AbstractParser<BlockProposal>() {
      @java.lang.Override
      public BlockProposal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockProposal(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockProposal> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockProposal> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConsensusVoteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:iotextypes.ConsensusVote)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes blockHash = 1;</code>
     */
    com.google.protobuf.ByteString getBlockHash();

    /**
     * <code>.iotextypes.ConsensusVote.Topic topic = 2;</code>
     */
    int getTopicValue();
    /**
     * <code>.iotextypes.ConsensusVote.Topic topic = 2;</code>
     */
    org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Topic getTopic();
  }
  /**
   * Protobuf type {@code iotextypes.ConsensusVote}
   */
  public  static final class ConsensusVote extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:iotextypes.ConsensusVote)
      ConsensusVoteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConsensusVote.newBuilder() to construct.
    private ConsensusVote(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConsensusVote() {
      blockHash_ = com.google.protobuf.ByteString.EMPTY;
      topic_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConsensusVote(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              blockHash_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              topic_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.iotexproject.antenna.grpc.iotextypes.Consensus.internal_static_iotextypes_ConsensusVote_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.iotexproject.antenna.grpc.iotextypes.Consensus.internal_static_iotextypes_ConsensusVote_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.class, org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Builder.class);
    }

    /**
     * Protobuf enum {@code iotextypes.ConsensusVote.Topic}
     */
    public enum Topic
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PROPOSAL = 0;</code>
       */
      PROPOSAL(0),
      /**
       * <code>LOCK = 1;</code>
       */
      LOCK(1),
      /**
       * <code>COMMIT = 2;</code>
       */
      COMMIT(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PROPOSAL = 0;</code>
       */
      public static final int PROPOSAL_VALUE = 0;
      /**
       * <code>LOCK = 1;</code>
       */
      public static final int LOCK_VALUE = 1;
      /**
       * <code>COMMIT = 2;</code>
       */
      public static final int COMMIT_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Topic valueOf(int value) {
        return forNumber(value);
      }

      public static Topic forNumber(int value) {
        switch (value) {
          case 0: return PROPOSAL;
          case 1: return LOCK;
          case 2: return COMMIT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Topic>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Topic> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Topic>() {
              public Topic findValueByNumber(int number) {
                return Topic.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.getDescriptor().getEnumTypes().get(0);
      }

      private static final Topic[] VALUES = values();

      public static Topic valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Topic(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:iotextypes.ConsensusVote.Topic)
    }

    public static final int BLOCKHASH_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString blockHash_;
    /**
     * <code>bytes blockHash = 1;</code>
     */
    public com.google.protobuf.ByteString getBlockHash() {
      return blockHash_;
    }

    public static final int TOPIC_FIELD_NUMBER = 2;
    private int topic_;
    /**
     * <code>.iotextypes.ConsensusVote.Topic topic = 2;</code>
     */
    public int getTopicValue() {
      return topic_;
    }
    /**
     * <code>.iotextypes.ConsensusVote.Topic topic = 2;</code>
     */
    public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Topic getTopic() {
      @SuppressWarnings("deprecation")
      org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Topic result = org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Topic.valueOf(topic_);
      return result == null ? org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Topic.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!blockHash_.isEmpty()) {
        output.writeBytes(1, blockHash_);
      }
      if (topic_ != org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Topic.PROPOSAL.getNumber()) {
        output.writeEnum(2, topic_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!blockHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, blockHash_);
      }
      if (topic_ != org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Topic.PROPOSAL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, topic_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote)) {
        return super.equals(obj);
      }
      org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote other = (org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote) obj;

      if (!getBlockHash()
          .equals(other.getBlockHash())) return false;
      if (topic_ != other.topic_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BLOCKHASH_FIELD_NUMBER;
      hash = (53 * hash) + getBlockHash().hashCode();
      hash = (37 * hash) + TOPIC_FIELD_NUMBER;
      hash = (53 * hash) + topic_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code iotextypes.ConsensusVote}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:iotextypes.ConsensusVote)
        org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVoteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.iotexproject.antenna.grpc.iotextypes.Consensus.internal_static_iotextypes_ConsensusVote_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.iotexproject.antenna.grpc.iotextypes.Consensus.internal_static_iotextypes_ConsensusVote_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.class, org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Builder.class);
      }

      // Construct using org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        blockHash_ = com.google.protobuf.ByteString.EMPTY;

        topic_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.iotexproject.antenna.grpc.iotextypes.Consensus.internal_static_iotextypes_ConsensusVote_descriptor;
      }

      @java.lang.Override
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote getDefaultInstanceForType() {
        return org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.getDefaultInstance();
      }

      @java.lang.Override
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote build() {
        org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote buildPartial() {
        org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote result = new org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote(this);
        result.blockHash_ = blockHash_;
        result.topic_ = topic_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote) {
          return mergeFrom((org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote other) {
        if (other == org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.getDefaultInstance()) return this;
        if (other.getBlockHash() != com.google.protobuf.ByteString.EMPTY) {
          setBlockHash(other.getBlockHash());
        }
        if (other.topic_ != 0) {
          setTopicValue(other.getTopicValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString blockHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes blockHash = 1;</code>
       */
      public com.google.protobuf.ByteString getBlockHash() {
        return blockHash_;
      }
      /**
       * <code>bytes blockHash = 1;</code>
       */
      public Builder setBlockHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        blockHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes blockHash = 1;</code>
       */
      public Builder clearBlockHash() {
        
        blockHash_ = getDefaultInstance().getBlockHash();
        onChanged();
        return this;
      }

      private int topic_ = 0;
      /**
       * <code>.iotextypes.ConsensusVote.Topic topic = 2;</code>
       */
      public int getTopicValue() {
        return topic_;
      }
      /**
       * <code>.iotextypes.ConsensusVote.Topic topic = 2;</code>
       */
      public Builder setTopicValue(int value) {
        topic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.iotextypes.ConsensusVote.Topic topic = 2;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Topic getTopic() {
        @SuppressWarnings("deprecation")
        org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Topic result = org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Topic.valueOf(topic_);
        return result == null ? org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Topic.UNRECOGNIZED : result;
      }
      /**
       * <code>.iotextypes.ConsensusVote.Topic topic = 2;</code>
       */
      public Builder setTopic(org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Topic value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        topic_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.iotextypes.ConsensusVote.Topic topic = 2;</code>
       */
      public Builder clearTopic() {
        
        topic_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:iotextypes.ConsensusVote)
    }

    // @@protoc_insertion_point(class_scope:iotextypes.ConsensusVote)
    private static final org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote();
    }

    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConsensusVote>
        PARSER = new com.google.protobuf.AbstractParser<ConsensusVote>() {
      @java.lang.Override
      public ConsensusVote parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConsensusVote(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConsensusVote> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConsensusVote> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConsensusMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:iotextypes.ConsensusMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 height = 1;</code>
     */
    long getHeight();

    /**
     * <code>.iotextypes.Endorsement endorsement = 2;</code>
     */
    boolean hasEndorsement();
    /**
     * <code>.iotextypes.Endorsement endorsement = 2;</code>
     */
    org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement getEndorsement();
    /**
     * <code>.iotextypes.Endorsement endorsement = 2;</code>
     */
    org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.EndorsementOrBuilder getEndorsementOrBuilder();

    /**
     * <code>.iotextypes.BlockProposal blockProposal = 100;</code>
     */
    boolean hasBlockProposal();
    /**
     * <code>.iotextypes.BlockProposal blockProposal = 100;</code>
     */
    org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal getBlockProposal();
    /**
     * <code>.iotextypes.BlockProposal blockProposal = 100;</code>
     */
    org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposalOrBuilder getBlockProposalOrBuilder();

    /**
     * <code>.iotextypes.ConsensusVote vote = 101;</code>
     */
    boolean hasVote();
    /**
     * <code>.iotextypes.ConsensusVote vote = 101;</code>
     */
    org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote getVote();
    /**
     * <code>.iotextypes.ConsensusVote vote = 101;</code>
     */
    org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVoteOrBuilder getVoteOrBuilder();

    public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage.MsgCase getMsgCase();
  }
  /**
   * Protobuf type {@code iotextypes.ConsensusMessage}
   */
  public  static final class ConsensusMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:iotextypes.ConsensusMessage)
      ConsensusMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConsensusMessage.newBuilder() to construct.
    private ConsensusMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConsensusMessage() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConsensusMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              height_ = input.readUInt64();
              break;
            }
            case 18: {
              org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder subBuilder = null;
              if (endorsement_ != null) {
                subBuilder = endorsement_.toBuilder();
              }
              endorsement_ = input.readMessage(org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(endorsement_);
                endorsement_ = subBuilder.buildPartial();
              }

              break;
            }
            case 802: {
              org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.Builder subBuilder = null;
              if (msgCase_ == 100) {
                subBuilder = ((org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal) msg_).toBuilder();
              }
              msg_ =
                  input.readMessage(org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal) msg_);
                msg_ = subBuilder.buildPartial();
              }
              msgCase_ = 100;
              break;
            }
            case 810: {
              org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Builder subBuilder = null;
              if (msgCase_ == 101) {
                subBuilder = ((org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote) msg_).toBuilder();
              }
              msg_ =
                  input.readMessage(org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote) msg_);
                msg_ = subBuilder.buildPartial();
              }
              msgCase_ = 101;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.iotexproject.antenna.grpc.iotextypes.Consensus.internal_static_iotextypes_ConsensusMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.iotexproject.antenna.grpc.iotextypes.Consensus.internal_static_iotextypes_ConsensusMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage.class, org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage.Builder.class);
    }

    private int msgCase_ = 0;
    private java.lang.Object msg_;
    public enum MsgCase
        implements com.google.protobuf.Internal.EnumLite {
      BLOCKPROPOSAL(100),
      VOTE(101),
      MSG_NOT_SET(0);
      private final int value;
      private MsgCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MsgCase valueOf(int value) {
        return forNumber(value);
      }

      public static MsgCase forNumber(int value) {
        switch (value) {
          case 100: return BLOCKPROPOSAL;
          case 101: return VOTE;
          case 0: return MSG_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public MsgCase
    getMsgCase() {
      return MsgCase.forNumber(
          msgCase_);
    }

    public static final int HEIGHT_FIELD_NUMBER = 1;
    private long height_;
    /**
     * <code>uint64 height = 1;</code>
     */
    public long getHeight() {
      return height_;
    }

    public static final int ENDORSEMENT_FIELD_NUMBER = 2;
    private org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement endorsement_;
    /**
     * <code>.iotextypes.Endorsement endorsement = 2;</code>
     */
    public boolean hasEndorsement() {
      return endorsement_ != null;
    }
    /**
     * <code>.iotextypes.Endorsement endorsement = 2;</code>
     */
    public org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement getEndorsement() {
      return endorsement_ == null ? org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.getDefaultInstance() : endorsement_;
    }
    /**
     * <code>.iotextypes.Endorsement endorsement = 2;</code>
     */
    public org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.EndorsementOrBuilder getEndorsementOrBuilder() {
      return getEndorsement();
    }

    public static final int BLOCKPROPOSAL_FIELD_NUMBER = 100;
    /**
     * <code>.iotextypes.BlockProposal blockProposal = 100;</code>
     */
    public boolean hasBlockProposal() {
      return msgCase_ == 100;
    }
    /**
     * <code>.iotextypes.BlockProposal blockProposal = 100;</code>
     */
    public org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal getBlockProposal() {
      if (msgCase_ == 100) {
         return (org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal) msg_;
      }
      return org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.getDefaultInstance();
    }
    /**
     * <code>.iotextypes.BlockProposal blockProposal = 100;</code>
     */
    public org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposalOrBuilder getBlockProposalOrBuilder() {
      if (msgCase_ == 100) {
         return (org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal) msg_;
      }
      return org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.getDefaultInstance();
    }

    public static final int VOTE_FIELD_NUMBER = 101;
    /**
     * <code>.iotextypes.ConsensusVote vote = 101;</code>
     */
    public boolean hasVote() {
      return msgCase_ == 101;
    }
    /**
     * <code>.iotextypes.ConsensusVote vote = 101;</code>
     */
    public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote getVote() {
      if (msgCase_ == 101) {
         return (org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote) msg_;
      }
      return org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.getDefaultInstance();
    }
    /**
     * <code>.iotextypes.ConsensusVote vote = 101;</code>
     */
    public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVoteOrBuilder getVoteOrBuilder() {
      if (msgCase_ == 101) {
         return (org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote) msg_;
      }
      return org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (height_ != 0L) {
        output.writeUInt64(1, height_);
      }
      if (endorsement_ != null) {
        output.writeMessage(2, getEndorsement());
      }
      if (msgCase_ == 100) {
        output.writeMessage(100, (org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal) msg_);
      }
      if (msgCase_ == 101) {
        output.writeMessage(101, (org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote) msg_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (height_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, height_);
      }
      if (endorsement_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEndorsement());
      }
      if (msgCase_ == 100) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, (org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal) msg_);
      }
      if (msgCase_ == 101) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, (org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote) msg_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage)) {
        return super.equals(obj);
      }
      org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage other = (org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage) obj;

      if (getHeight()
          != other.getHeight()) return false;
      if (hasEndorsement() != other.hasEndorsement()) return false;
      if (hasEndorsement()) {
        if (!getEndorsement()
            .equals(other.getEndorsement())) return false;
      }
      if (!getMsgCase().equals(other.getMsgCase())) return false;
      switch (msgCase_) {
        case 100:
          if (!getBlockProposal()
              .equals(other.getBlockProposal())) return false;
          break;
        case 101:
          if (!getVote()
              .equals(other.getVote())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHeight());
      if (hasEndorsement()) {
        hash = (37 * hash) + ENDORSEMENT_FIELD_NUMBER;
        hash = (53 * hash) + getEndorsement().hashCode();
      }
      switch (msgCase_) {
        case 100:
          hash = (37 * hash) + BLOCKPROPOSAL_FIELD_NUMBER;
          hash = (53 * hash) + getBlockProposal().hashCode();
          break;
        case 101:
          hash = (37 * hash) + VOTE_FIELD_NUMBER;
          hash = (53 * hash) + getVote().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code iotextypes.ConsensusMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:iotextypes.ConsensusMessage)
        org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.iotexproject.antenna.grpc.iotextypes.Consensus.internal_static_iotextypes_ConsensusMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.iotexproject.antenna.grpc.iotextypes.Consensus.internal_static_iotextypes_ConsensusMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage.class, org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage.Builder.class);
      }

      // Construct using org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        height_ = 0L;

        if (endorsementBuilder_ == null) {
          endorsement_ = null;
        } else {
          endorsement_ = null;
          endorsementBuilder_ = null;
        }
        msgCase_ = 0;
        msg_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.iotexproject.antenna.grpc.iotextypes.Consensus.internal_static_iotextypes_ConsensusMessage_descriptor;
      }

      @java.lang.Override
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage getDefaultInstanceForType() {
        return org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage.getDefaultInstance();
      }

      @java.lang.Override
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage build() {
        org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage buildPartial() {
        org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage result = new org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage(this);
        result.height_ = height_;
        if (endorsementBuilder_ == null) {
          result.endorsement_ = endorsement_;
        } else {
          result.endorsement_ = endorsementBuilder_.build();
        }
        if (msgCase_ == 100) {
          if (blockProposalBuilder_ == null) {
            result.msg_ = msg_;
          } else {
            result.msg_ = blockProposalBuilder_.build();
          }
        }
        if (msgCase_ == 101) {
          if (voteBuilder_ == null) {
            result.msg_ = msg_;
          } else {
            result.msg_ = voteBuilder_.build();
          }
        }
        result.msgCase_ = msgCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage) {
          return mergeFrom((org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage other) {
        if (other == org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage.getDefaultInstance()) return this;
        if (other.getHeight() != 0L) {
          setHeight(other.getHeight());
        }
        if (other.hasEndorsement()) {
          mergeEndorsement(other.getEndorsement());
        }
        switch (other.getMsgCase()) {
          case BLOCKPROPOSAL: {
            mergeBlockProposal(other.getBlockProposal());
            break;
          }
          case VOTE: {
            mergeVote(other.getVote());
            break;
          }
          case MSG_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int msgCase_ = 0;
      private java.lang.Object msg_;
      public MsgCase
          getMsgCase() {
        return MsgCase.forNumber(
            msgCase_);
      }

      public Builder clearMsg() {
        msgCase_ = 0;
        msg_ = null;
        onChanged();
        return this;
      }


      private long height_ ;
      /**
       * <code>uint64 height = 1;</code>
       */
      public long getHeight() {
        return height_;
      }
      /**
       * <code>uint64 height = 1;</code>
       */
      public Builder setHeight(long value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 height = 1;</code>
       */
      public Builder clearHeight() {
        
        height_ = 0L;
        onChanged();
        return this;
      }

      private org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement endorsement_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.EndorsementOrBuilder> endorsementBuilder_;
      /**
       * <code>.iotextypes.Endorsement endorsement = 2;</code>
       */
      public boolean hasEndorsement() {
        return endorsementBuilder_ != null || endorsement_ != null;
      }
      /**
       * <code>.iotextypes.Endorsement endorsement = 2;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement getEndorsement() {
        if (endorsementBuilder_ == null) {
          return endorsement_ == null ? org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.getDefaultInstance() : endorsement_;
        } else {
          return endorsementBuilder_.getMessage();
        }
      }
      /**
       * <code>.iotextypes.Endorsement endorsement = 2;</code>
       */
      public Builder setEndorsement(org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement value) {
        if (endorsementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endorsement_ = value;
          onChanged();
        } else {
          endorsementBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.iotextypes.Endorsement endorsement = 2;</code>
       */
      public Builder setEndorsement(
          org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder builderForValue) {
        if (endorsementBuilder_ == null) {
          endorsement_ = builderForValue.build();
          onChanged();
        } else {
          endorsementBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.iotextypes.Endorsement endorsement = 2;</code>
       */
      public Builder mergeEndorsement(org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement value) {
        if (endorsementBuilder_ == null) {
          if (endorsement_ != null) {
            endorsement_ =
              org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.newBuilder(endorsement_).mergeFrom(value).buildPartial();
          } else {
            endorsement_ = value;
          }
          onChanged();
        } else {
          endorsementBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.iotextypes.Endorsement endorsement = 2;</code>
       */
      public Builder clearEndorsement() {
        if (endorsementBuilder_ == null) {
          endorsement_ = null;
          onChanged();
        } else {
          endorsement_ = null;
          endorsementBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.iotextypes.Endorsement endorsement = 2;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder getEndorsementBuilder() {
        
        onChanged();
        return getEndorsementFieldBuilder().getBuilder();
      }
      /**
       * <code>.iotextypes.Endorsement endorsement = 2;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.EndorsementOrBuilder getEndorsementOrBuilder() {
        if (endorsementBuilder_ != null) {
          return endorsementBuilder_.getMessageOrBuilder();
        } else {
          return endorsement_ == null ?
              org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.getDefaultInstance() : endorsement_;
        }
      }
      /**
       * <code>.iotextypes.Endorsement endorsement = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.EndorsementOrBuilder> 
          getEndorsementFieldBuilder() {
        if (endorsementBuilder_ == null) {
          endorsementBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.Endorsement.Builder, org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.EndorsementOrBuilder>(
                  getEndorsement(),
                  getParentForChildren(),
                  isClean());
          endorsement_ = null;
        }
        return endorsementBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal, org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.Builder, org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposalOrBuilder> blockProposalBuilder_;
      /**
       * <code>.iotextypes.BlockProposal blockProposal = 100;</code>
       */
      public boolean hasBlockProposal() {
        return msgCase_ == 100;
      }
      /**
       * <code>.iotextypes.BlockProposal blockProposal = 100;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal getBlockProposal() {
        if (blockProposalBuilder_ == null) {
          if (msgCase_ == 100) {
            return (org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal) msg_;
          }
          return org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.getDefaultInstance();
        } else {
          if (msgCase_ == 100) {
            return blockProposalBuilder_.getMessage();
          }
          return org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.getDefaultInstance();
        }
      }
      /**
       * <code>.iotextypes.BlockProposal blockProposal = 100;</code>
       */
      public Builder setBlockProposal(org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal value) {
        if (blockProposalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          msg_ = value;
          onChanged();
        } else {
          blockProposalBuilder_.setMessage(value);
        }
        msgCase_ = 100;
        return this;
      }
      /**
       * <code>.iotextypes.BlockProposal blockProposal = 100;</code>
       */
      public Builder setBlockProposal(
          org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.Builder builderForValue) {
        if (blockProposalBuilder_ == null) {
          msg_ = builderForValue.build();
          onChanged();
        } else {
          blockProposalBuilder_.setMessage(builderForValue.build());
        }
        msgCase_ = 100;
        return this;
      }
      /**
       * <code>.iotextypes.BlockProposal blockProposal = 100;</code>
       */
      public Builder mergeBlockProposal(org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal value) {
        if (blockProposalBuilder_ == null) {
          if (msgCase_ == 100 &&
              msg_ != org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.getDefaultInstance()) {
            msg_ = org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.newBuilder((org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal) msg_)
                .mergeFrom(value).buildPartial();
          } else {
            msg_ = value;
          }
          onChanged();
        } else {
          if (msgCase_ == 100) {
            blockProposalBuilder_.mergeFrom(value);
          }
          blockProposalBuilder_.setMessage(value);
        }
        msgCase_ = 100;
        return this;
      }
      /**
       * <code>.iotextypes.BlockProposal blockProposal = 100;</code>
       */
      public Builder clearBlockProposal() {
        if (blockProposalBuilder_ == null) {
          if (msgCase_ == 100) {
            msgCase_ = 0;
            msg_ = null;
            onChanged();
          }
        } else {
          if (msgCase_ == 100) {
            msgCase_ = 0;
            msg_ = null;
          }
          blockProposalBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.iotextypes.BlockProposal blockProposal = 100;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.Builder getBlockProposalBuilder() {
        return getBlockProposalFieldBuilder().getBuilder();
      }
      /**
       * <code>.iotextypes.BlockProposal blockProposal = 100;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposalOrBuilder getBlockProposalOrBuilder() {
        if ((msgCase_ == 100) && (blockProposalBuilder_ != null)) {
          return blockProposalBuilder_.getMessageOrBuilder();
        } else {
          if (msgCase_ == 100) {
            return (org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal) msg_;
          }
          return org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.getDefaultInstance();
        }
      }
      /**
       * <code>.iotextypes.BlockProposal blockProposal = 100;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal, org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.Builder, org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposalOrBuilder> 
          getBlockProposalFieldBuilder() {
        if (blockProposalBuilder_ == null) {
          if (!(msgCase_ == 100)) {
            msg_ = org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.getDefaultInstance();
          }
          blockProposalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal, org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal.Builder, org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposalOrBuilder>(
                  (org.iotexproject.antenna.grpc.iotextypes.Consensus.BlockProposal) msg_,
                  getParentForChildren(),
                  isClean());
          msg_ = null;
        }
        msgCase_ = 100;
        onChanged();;
        return blockProposalBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote, org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Builder, org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVoteOrBuilder> voteBuilder_;
      /**
       * <code>.iotextypes.ConsensusVote vote = 101;</code>
       */
      public boolean hasVote() {
        return msgCase_ == 101;
      }
      /**
       * <code>.iotextypes.ConsensusVote vote = 101;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote getVote() {
        if (voteBuilder_ == null) {
          if (msgCase_ == 101) {
            return (org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote) msg_;
          }
          return org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.getDefaultInstance();
        } else {
          if (msgCase_ == 101) {
            return voteBuilder_.getMessage();
          }
          return org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.getDefaultInstance();
        }
      }
      /**
       * <code>.iotextypes.ConsensusVote vote = 101;</code>
       */
      public Builder setVote(org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote value) {
        if (voteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          msg_ = value;
          onChanged();
        } else {
          voteBuilder_.setMessage(value);
        }
        msgCase_ = 101;
        return this;
      }
      /**
       * <code>.iotextypes.ConsensusVote vote = 101;</code>
       */
      public Builder setVote(
          org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Builder builderForValue) {
        if (voteBuilder_ == null) {
          msg_ = builderForValue.build();
          onChanged();
        } else {
          voteBuilder_.setMessage(builderForValue.build());
        }
        msgCase_ = 101;
        return this;
      }
      /**
       * <code>.iotextypes.ConsensusVote vote = 101;</code>
       */
      public Builder mergeVote(org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote value) {
        if (voteBuilder_ == null) {
          if (msgCase_ == 101 &&
              msg_ != org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.getDefaultInstance()) {
            msg_ = org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.newBuilder((org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote) msg_)
                .mergeFrom(value).buildPartial();
          } else {
            msg_ = value;
          }
          onChanged();
        } else {
          if (msgCase_ == 101) {
            voteBuilder_.mergeFrom(value);
          }
          voteBuilder_.setMessage(value);
        }
        msgCase_ = 101;
        return this;
      }
      /**
       * <code>.iotextypes.ConsensusVote vote = 101;</code>
       */
      public Builder clearVote() {
        if (voteBuilder_ == null) {
          if (msgCase_ == 101) {
            msgCase_ = 0;
            msg_ = null;
            onChanged();
          }
        } else {
          if (msgCase_ == 101) {
            msgCase_ = 0;
            msg_ = null;
          }
          voteBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.iotextypes.ConsensusVote vote = 101;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Builder getVoteBuilder() {
        return getVoteFieldBuilder().getBuilder();
      }
      /**
       * <code>.iotextypes.ConsensusVote vote = 101;</code>
       */
      public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVoteOrBuilder getVoteOrBuilder() {
        if ((msgCase_ == 101) && (voteBuilder_ != null)) {
          return voteBuilder_.getMessageOrBuilder();
        } else {
          if (msgCase_ == 101) {
            return (org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote) msg_;
          }
          return org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.getDefaultInstance();
        }
      }
      /**
       * <code>.iotextypes.ConsensusVote vote = 101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote, org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Builder, org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVoteOrBuilder> 
          getVoteFieldBuilder() {
        if (voteBuilder_ == null) {
          if (!(msgCase_ == 101)) {
            msg_ = org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.getDefaultInstance();
          }
          voteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote, org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote.Builder, org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVoteOrBuilder>(
                  (org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusVote) msg_,
                  getParentForChildren(),
                  isClean());
          msg_ = null;
        }
        msgCase_ = 101;
        onChanged();;
        return voteBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:iotextypes.ConsensusMessage)
    }

    // @@protoc_insertion_point(class_scope:iotextypes.ConsensusMessage)
    private static final org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage();
    }

    public static org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConsensusMessage>
        PARSER = new com.google.protobuf.AbstractParser<ConsensusMessage>() {
      @java.lang.Override
      public ConsensusMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConsensusMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConsensusMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConsensusMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.iotexproject.antenna.grpc.iotextypes.Consensus.ConsensusMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_iotextypes_BlockProposal_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_iotextypes_BlockProposal_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_iotextypes_ConsensusVote_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_iotextypes_ConsensusVote_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_iotextypes_ConsensusMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_iotextypes_ConsensusMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017consensus.proto\022\niotextypes\032\020blockchai" +
      "n.proto\032\021endorsement.proto\"`\n\rBlockPropo" +
      "sal\022 \n\005block\030\001 \001(\0132\021.iotextypes.Block\022-\n" +
      "\014endorsements\030\002 \003(\0132\027.iotextypes.Endorse" +
      "ment\"\177\n\rConsensusVote\022\021\n\tblockHash\030\001 \001(\014" +
      "\022.\n\005topic\030\002 \001(\0162\037.iotextypes.ConsensusVo" +
      "te.Topic\"+\n\005Topic\022\014\n\010PROPOSAL\020\000\022\010\n\004LOCK\020" +
      "\001\022\n\n\006COMMIT\020\002\"\266\001\n\020ConsensusMessage\022\016\n\006he" +
      "ight\030\001 \001(\004\022,\n\013endorsement\030\002 \001(\0132\027.iotext" +
      "ypes.Endorsement\0222\n\rblockProposal\030d \001(\0132" +
      "\031.iotextypes.BlockProposalH\000\022)\n\004vote\030e \001" +
      "(\0132\031.iotextypes.ConsensusVoteH\000B\005\n\003msgBb" +
      "\n(org.iotexproject.antenna.grpc.iotextyp" +
      "esZ6github.com/iotexproject/iotex-core/p" +
      "rotogen/iotextypesb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.iotexproject.antenna.grpc.iotextypes.Blockchain.getDescriptor(),
          org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.getDescriptor(),
        }, assigner);
    internal_static_iotextypes_BlockProposal_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_iotextypes_BlockProposal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_iotextypes_BlockProposal_descriptor,
        new java.lang.String[] { "Block", "Endorsements", });
    internal_static_iotextypes_ConsensusVote_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_iotextypes_ConsensusVote_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_iotextypes_ConsensusVote_descriptor,
        new java.lang.String[] { "BlockHash", "Topic", });
    internal_static_iotextypes_ConsensusMessage_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_iotextypes_ConsensusMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_iotextypes_ConsensusMessage_descriptor,
        new java.lang.String[] { "Height", "Endorsement", "BlockProposal", "Vote", "Msg", });
    org.iotexproject.antenna.grpc.iotextypes.Blockchain.getDescriptor();
    org.iotexproject.antenna.grpc.iotextypes.EndorsementOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
